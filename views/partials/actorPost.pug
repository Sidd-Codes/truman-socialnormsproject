ui.fluid.card.dim(
  postClass=val.class, 
  postID=val.id, 
  type='actor', 
  actor_un=val.actor.username, 
  actor_name=val.actor.profile.name, 
  actor_pic=val.actor.profile.picture
)
  .content
    .right.floated.time.meta= (user.createdAt.getTime() + val.time)
    a(href='/user/'+val.actor.username)
      img.ui.avatar.image(src='/public/picture.svg', data-src=cdn+"/profile_pictures/"+val.actor.profile.picture)
      span=val.actor.profile.name
  .img.post.image
    img(src='/public/picture.svg', data-src=cdn+"/post_pictures/"+val.picture, style="max-width:100%; width:100%;")
  .content
    .description=val.body
    .myTimer.hidden 0
  .ui.bottom.four.attached.icon.buttons
    .ui.reply.button(tabindex='0')
      i.reply.icon
      | Reply
    .ui.labeled.button(tabindex='0')
  .ui.like.button(class=val.like ? "green" : null)
    i.heart.icon
    | Like
  a.ui.basic.green.left.pointing.label.count=val.likes
    //- Updated Harmful button
    .ui.harmful.button(tabindex='0', onClick='markAsHarmful(event)', class=val.markedAsHarmful ? 'red' : '')
      i.warning.circle.icon
      | Harmful
    //- New Repost button
    .ui.repost.button(tabindex='0', onClick='repostPost(event)')
      i.retweet.icon
      | Repost
  if val.comments.length > 0
    .content
      .ui.comments
        each comment in val.comments
          if comment.new_comment
            .comment(commentID=comment.commentID)
              a.avatar.image(href='/me')
                if user.profile.picture
                  img(src='/user_avatar/'+user.profile.picture)
                else
                  img(src=user.gravatar(60))
              .content
                a.author(href='/me')=user.profile.name || user.username || user.id
                .metadata
                  span.date=(user.createdAt.getTime() + comment.time)
                  .rating
                    i.heart.icon(class=comment.liked ? "red" : null)
                    span.num=comment.likes+(comment.liked ? 1 : 0)
                    | Likes
                .text=comment.body
                .actions
                  a.like.comment(class=comment.liked ? "red" : null) !{comment.liked ? "Unlike" : "Like"}
                  a.ui.harmful.button.comment-harmful-button(tabindex='0', onClick='markAsHarmful(event)', class=comment.markedAsHarmful ? 'red' : '')
                    i.warning.circle.icon
                    | Harmful
          else
            .comment(commentID=comment.id)
              a.avatar(href='/user/'+comment.actor.username)
                img(src='/public/picture.svg', data-src=cdn+"/profile_pictures/"+comment.actor.profile.picture)
              .content
                a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                .metadata
                  span.date=(user.createdAt.getTime() + comment.time)
                  .rating
                    i.heart.icon(class=comment.liked ? "red" : null)
                    span.num=comment.likes+(comment.liked ? 1 : 0)
                    | Likes
                .text=comment.body
                .actions
                  a.like.comment(class=comment.liked ? "red" : null) !{comment.liked ? "Unlike" : "Like"}
                  a.ui.harmful.button.comment-harmful-button(tabindex='0', onClick='markAsHarmful(event)', class=comment.markedAsHarmful ? 'red' : '')
                    i.warning.circle.icon
                    | Harmful
  .extra.content
    .ui.fluid.left.labeled.right.icon.input
      .ui.label
        if user.profile.picture
          img.ui.avatar.image.small(src='/user_avatar/'+user.profile.picture, name=user.profile.name || user.username || user.id)
        else
          img.ui.avatar.image.small(src=user.gravatar(60), name=user.profile.name || user.username || user.id)
      .ui.form
        .field
          textarea.newcomment(type='text', placeholder='Write a Comment' rows='1')
        i.big.send.link.icon
